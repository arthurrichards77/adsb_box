# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

# if awake early, log windspeed, and sleep for an hour
0-55/5 0-7 * * *  cd /home/pi/adsb_box; python3 anemometer.py -w newlogs/windbox >> mycron.log 2>&1; python3 snooze.py 2 720 >> mycron.log 2>&1 && sudo /usr/sbin/poweroff >> mycron.log 2>&1

# every five minutes (except *:55) log the wind speed, then sleep for 4 minutes
0-50/5 8-15 * * * cd /home/pi/adsb_box; python3 anemometer.py -w newlogs/windbox >> mycron.log 2>&1; python3 snooze.py 2 44 >> mycron.log 2>&1 && sudo /usr/sbin/poweroff >> mycron.log 2>&1

# every hour, while wifi on, log windspeed, position, and upload all the wind logs; don't snooze on this one in case it takes a while
55 5-15 * * * cd /home/pi/adsb_box; python3 anemometer.py -w newlogs/windbox -p newlogs/windbox >> mycron.log 2>&1 ; python3 dropbox_upload.py -u "newlogs/windbox*.txt" -d sent/ >> mycron.log 2>&1

# after 4pm every day, upload all outstanding logs; then sleep overnight
0-55/5 16-23 * * * cd /home/pi/adsb_box; python3 dropbox_upload.py -u "newlogs/*.txt" -d sent/ >> mycron.log 2>&1; python3 snooze.py 12 11520 >> mycron.log 2>&1; sudo /usr/sbin/poweroff >> mycron.log 2>&1
